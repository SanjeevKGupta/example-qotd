# export MY_NAME=qotd-db
# export MY_PORT=3306

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: qotd-db
    tier: data
  name: qotd-db
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: qotd-db
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: qotd-db
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: qotd
        image: registry.gitlab.com/quote-of-the-day/qotd-db:v5.1.0
        imagePullPolicy: Always
        name: qotd-db
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - env:
        - name: LOG_LEVEL
          value: info
        - name: ENABLE_INSTANA
          value: "false"
        - name: ANOMALY_GENERATOR_URL
        - name: INSTANA_AGENT_HOST
          value: NOT_USED
        image: registry.gitlab.com/quote-of-the-day/qotd-null:v5.1.0
        imagePullPolicy: Always
        name: anomaly
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: qotd-db
  labels:
    app: qotd-db
    tier: data
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: http
  selector:
    app: qotd-db
